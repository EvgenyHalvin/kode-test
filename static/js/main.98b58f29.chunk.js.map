{"version":3,"sources":["components/Header.js","components/Login.js","components/ProtectedRoute.js","components/Card.js","components/Cards.js","components/ListItem.js","components/Selector.js","components/Sidebar.js","components/Pagination.js","components/Main.js","components/ErrorPopup.js","components/FullImagePopup.js","components/ConfirmationContent.js","components/Confirmation.js","contexts/pocemonFullInfoContext.js","components/FullInfoCard.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","loggedIn","isConfirmed","signOut","className","to","onClick","Login","checkMatch","initialValues","email","password","validationSchema","Yup","shape","required","onSubmit","values","actions","setSubmitting","setTimeout","isSubmitting","type","name","placeholder","render","msg","disabled","ProtectedRoute","Component","component","props","Card","card","getPokemonInfo","setCardInfo","openFullImage","style","backgroundImage","images","small","artist","Cards","cards","isGotItems","map","item","id","ListItem","selectItem","Selector","selesctItem","listItems","typeSelector","menuId","menuList","toggleMenu","queryLint","handleQuery","useState","setIsMenuOpen","selectValue","setSelectValue","listValueItems","setListValueItems","titleSelect","setTitleSelect","search","useLocation","handleMenu","choiceTypeAndSelect","useEffect","subtype","filter","toLowerCase","includes","value","onChange","e","target","autoComplete","i","Sidebar","types","subtypes","getSelectedOptions","selectedItems","setSelectedItems","one","two","setMenuList","setQueryLint","history","useHistory","getSelectedItems","Object","assign","query","array","substring","split","elem","queryObject","fromEntries","re","replace","deserializeQuery","Pagination","currentPage","routePage","pagesAmount","nextPage","prevPage","firstPage","lastPage","Main","onClose","getCards","getTypes","getSubtypes","setCurrentPage","cardsPerPage","setPagesAmount","defaultCards","setDefaultCards","changePage","numberPage","slice","Math","ceil","length","prev","ErrorPopup","isOpen","FullImagePopup","alt","src","large","ConfirmationContent","confirm","console","log","code","typeError","Confirmation","PocemonFullInfoContext","React","createContext","FullInfoCard","pokemon","useContext","supertype","attacks","damage","cost","weaknesses","hp","flavorText","api","this","baseUrl","res","ok","json","Promise","reject","status","fetch","headers","Accept","then","checkResponse","App","fakeUser","setLoggedIn","setIsConfirmed","authData","setAuthData","setCards","setTypes","setSubtypes","selectedOptions","setSelectedOptions","copyCards","setCopyCards","isInfoToolTipOpen","setIsInfoToolTipOpen","isImagePopupOpen","setIsImagePopupOpen","cardInfo","pokemonFullInfo","setPokemonFullInfo","setIsGotItems","closeAllPopups","localStorage","getItem","push","Provider","removeItem","path","data","JSON","stringify","setItem","exact","options","catch","err","finally","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98b58f29.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header({ loggedIn, isConfirmed, signOut }) {\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to=\"/pokemon\" className=\"header__logo\">\r\n        LOGO\r\n      </Link>\r\n      <div className=\"header__status\">\r\n        <>\r\n          {loggedIn ? (\r\n            <Link to=\"/sign-in\" className=\"header__link\" onClick={signOut}>\r\n              Назад\r\n            </Link>\r\n          ) : isConfirmed ? (\r\n            <p className=\"header__link\" onClick={signOut}>\r\n              Выйти\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { React } from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction Login({ checkMatch }) {\r\n  return (\r\n    <div className=\"login\">\r\n      <h1 className=\"login__title\">Авторизация</h1>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string()\r\n            .email(\"Некорректно введен e-mail\")\r\n            .required(\"Введите e-mail\"),\r\n          password: Yup.string()\r\n            .required(\"Введите пароль\"),\r\n        })}\r\n        onSubmit={(values, actions) => {\r\n          actions.setSubmitting(true);\r\n          setTimeout(() => {\r\n            actions.setSubmitting(false);\r\n            checkMatch(values);\r\n          }, 1500);\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form className=\"form\">\r\n            <Field\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"E-mail\"\r\n              className=\"input\"\r\n            />\r\n            <ErrorMessage\r\n              name=\"email\"\r\n              render={(msg) => <div className=\"error\">{msg}</div>}\r\n            />\r\n            <Field\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Пароль\"\r\n              className=\"input\"\r\n            />\r\n            <ErrorMessage\r\n              name=\"password\"\r\n              render={(msg) => <div className=\"error\">{msg}</div>}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className={`${\r\n                isSubmitting ? \"entryBtn entryBtn_disabled\" : \"entryBtn\"\r\n              }`}\r\n            >\r\n              {isSubmitting ? \"Выполняется вход...\" : \"Войти\"}\r\n              {isSubmitting ? <div className=\"loader\" /> : \"\"}\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nfunction ProtectedRoute({ component: Component, ...props }) {\r\n  return (\r\n    <Route>\r\n      {() =>\r\n        props.isConfirmed ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\r\n      }\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Card({ card, getPokemonInfo, setCardInfo, openFullImage }) {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card\">\r\n        <div\r\n          style={{ backgroundImage: `url(${card.images.small})` }}\r\n          className=\"card__image\"\r\n          onClick={() => {\r\n            setCardInfo(card);\r\n            openFullImage();\r\n          }}\r\n        >\r\n          <span\r\n            className=\"card__quick-view\"\r\n          ></span>\r\n        </div>\r\n        <div className=\"card__description\">\r\n          <div className=\"card__name\">{card.name}</div>\r\n          <div className=\"card__subtitle\">\r\n            <b>Автор:</b> {card.artist}\r\n          </div>\r\n          <Link\r\n            to={`/pokemon/${card.name}`}\r\n            className=\"card__link\"\r\n            onClick={() => {getPokemonInfo(card)}}\r\n          >\r\n            Подробнее\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { React } from \"react\";\r\n\r\nimport Card from \"./Card\";\r\n\r\nfunction Cards({ cards, getPokemonInfo, isGotItems, setCardInfo, openFullImage }) {\r\n  return (\r\n    <div className=\"cards\">\r\n      {isGotItems ? (\r\n        <div className=\"wrap-for-loader\">\r\n          <div className=\"cardsLoader\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        cards.map((item) => (\r\n          <Card key={item.id} card={item} getPokemonInfo={getPokemonInfo} setCardInfo={setCardInfo} openFullImage={openFullImage} />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\n\r\nfunction ListItem({ item, selectItem }) {\r\n  function select() {\r\n    selectItem(item);\r\n  }\r\n\r\n  return (\r\n  <li className=\"selector__list-item\" onClick={select}>\r\n    {item}\r\n  </li>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import { React, useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport ListItem from './ListItem';\r\n\r\nfunction Selector({\r\n  selesctItem,\r\n  listItems,\r\n  typeSelector,\r\n  isGotItems,\r\n  menuId,\r\n  menuList,\r\n  toggleMenu,\r\n  queryLint,\r\n  handleQuery,\r\n}) {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [selectValue, setSelectValue] = useState('');\r\n  const [listValueItems, setListValueItems] = useState([]);\r\n  const [titleSelect, setTitleSelect] = useState('');\r\n\r\n  const { search } = useLocation();\r\n\r\n  useEffect(() => {\r\n    setListValueItems(listItems);\r\n  }, [listItems]);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => {\r\n    if (typeSelector === 'type') {\r\n      setTitleSelect(queryLint.type === '' ? 'Выберите тип' : queryLint.type);\r\n    } else {\r\n      setTitleSelect(\r\n        queryLint.subtype === '' ? 'Выберите подтип' : queryLint.subtype\r\n      );\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [queryLint, search]);\r\n\r\n  useEffect(() => {\r\n    if (listItems) {\r\n      setListValueItems(() =>\r\n        listItems.filter((item) =>\r\n          item.toLowerCase().includes(selectValue.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectValue]);\r\n\r\n  function changeOption(e) {\r\n    setSelectValue(e.target.value);\r\n  }\r\n\r\n  function handleMenu() {\r\n    // setIsMenuOpen(!isMenuOpen);\r\n    toggleMenu(menuId);\r\n    setSelectValue('');\r\n  }\r\n\r\n  function choiceTypeAndSelect(item) {\r\n    handleQuery(item, typeSelector);\r\n\r\n    setSelectValue(item);\r\n    setItemTitle(item);\r\n    selesctItem(item, typeSelector);\r\n    handleMenu();\r\n  }\r\n\r\n  function setItemTitle(name) {\r\n    setTitleSelect(name);\r\n    setIsMenuOpen(false);\r\n    setSelectValue('');\r\n  }\r\n\r\n  return (\r\n    <div className=\"selector\">\r\n      {isGotItems ? (\r\n        <div className=\"selector__switch selector__switch_disabled\">\r\n          Идёт загрузка...\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={`selector__switch ${\r\n            menuList[menuId] ? 'selector__switch_opened' : ''\r\n          }`}\r\n          onClick={() => handleMenu()}\r\n        >\r\n          {titleSelect}\r\n          <span\r\n            className={`selector__arrow ${\r\n              menuList[menuId] ? 'selector__arrow_opened' : ''\r\n            }`}\r\n          ></span>\r\n        </div>\r\n      )}\r\n      <div\r\n        className={`selector__menu ${\r\n          menuList[menuId] ? 'selector__menu_opened' : ''\r\n        }`}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          name=\"finder\"\r\n          className=\"selector__finder\"\r\n          placeholder=\"Искать... \"\r\n          value={selectValue || ''}\r\n          onChange={changeOption}\r\n          autoComplete=\"off\"\r\n        />\r\n        <ul className=\"selector__list\">\r\n          {listValueItems.map((item, i) => (\r\n            <ListItem key={i} item={item} selectItem={choiceTypeAndSelect} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Selector;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { React, useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport Selector from './Selector';\r\n\r\nfunction Sidebar(props) {\r\n  const { types, subtypes, getSelectedOptions, isGotItems, cards } = props;\r\n\r\n  const [selectedItems, setSelectedItems] = useState({});\r\n  const [menuList, setMenuList] = useState({ one: false, two: false });\r\n  const [queryLint, setQueryLint] = useState({\r\n    type: '',\r\n    subtype: '',\r\n  });\r\n\r\n  const history = useHistory();\r\n  const { search } = useLocation();\r\n\r\n  // Преобразование строки в объект\r\n  const deserializeQuery = (query) => {\r\n    const pairs = query.substring(1).split('&');\r\n    const array = pairs.map((elem) => elem.split('='));\r\n    const queryObject = Object.fromEntries(array);\r\n    const re = /%20/g;\r\n    \r\n    setQueryLint({\r\n      type: queryObject.type ? queryObject.type.replace(re, ' ') : '',\r\n      subtype: queryObject.subtype ? queryObject.subtype.replace(re, ' ') : '',\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    search && deserializeQuery(search);\r\n  }, [search]);\r\n\r\n  function handleQuery(item, typeSelector) {\r\n    if (typeSelector === 'type') {\r\n      setQueryLint({ ...queryLint, type: item });\r\n    }\r\n    if (typeSelector === 'subtype') {\r\n      setQueryLint({ ...queryLint, subtype: item });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let query = '';\r\n\r\n    if (queryLint.type && !queryLint.subtype) {\r\n      query = `type=${queryLint.type}`;\r\n    }\r\n    if (queryLint.subtype && queryLint.subtype) {\r\n      query = `type=${queryLint.type}&subtype=${queryLint.subtype}`;\r\n    }\r\n    if (!queryLint.type && queryLint.subtype) {\r\n      query = `subtype=${queryLint.subtype}`;\r\n    }\r\n\r\n    history.replace({ search: query });\r\n  }, [queryLint]);\r\n\r\n  useEffect(() => {\r\n    getSelectedOptions(selectedItems);\r\n  }, [selectedItems, getSelectedOptions]);\r\n\r\n  useEffect(() => {\r\n    getSelectedOptions(queryLint);\r\n  }, [queryLint, cards]);\r\n\r\n  function getSelectedItems(item, typeSelector) {\r\n    typeSelector === 'type'\r\n      ? setSelectedItems({ ...selectedItems, type: item })\r\n      : setSelectedItems({ ...selectedItems, subtype: item });\r\n  }\r\n\r\n  function toggleMenu(menuId) {\r\n    setMenuList(() => {\r\n      return Object.assign(\r\n        { one: false, two: false },\r\n        { [menuId]: !menuList[menuId] }\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <Selector\r\n        menuId=\"one\"\r\n        menuList={menuList}\r\n        toggleMenu={toggleMenu}\r\n        selesctItem={getSelectedItems}\r\n        isGotItems={isGotItems}\r\n        listItems={types}\r\n        typeSelector=\"type\"\r\n        queryLint={queryLint}\r\n        handleQuery={handleQuery}\r\n      />\r\n      <Selector\r\n        menuId=\"two\"\r\n        menuList={menuList}\r\n        toggleMenu={toggleMenu}\r\n        selesctItem={getSelectedItems}\r\n        isGotItems={isGotItems}\r\n        listItems={subtypes}\r\n        typeSelector=\"subtype\"\r\n        queryLint={queryLint}\r\n        handleQuery={handleQuery}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n\r\nfunction Pagination({ currentPage, routePage, pagesAmount, isGotItems }) {\r\n  const { nextPage, prevPage, firstPage, lastPage } = routePage;\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      {!isGotItems ? (\r\n        <>\r\n          <button\r\n            className={`pagination__button ${\r\n              currentPage === 1 ? \"pagination__button_disabled\" : \"\"\r\n            }`}\r\n            disabled={currentPage === 1 ? true : false}\r\n            onClick={firstPage}\r\n          >\r\n            на первую\r\n          </button>\r\n          <button\r\n            className={`pagination__button ${\r\n              currentPage === 1 ? \"pagination__button_disabled\" : \"\"\r\n            }`}\r\n            disabled={currentPage === 1 ? true : false}\r\n            onClick={prevPage}\r\n          >\r\n            предыдущая\r\n          </button>\r\n          <button className=\"pagination__button\">\r\n            {currentPage} / {pagesAmount}\r\n          </button>\r\n          <button\r\n            className={`pagination__button ${\r\n              currentPage === pagesAmount ? \"pagination__button_disabled\" : \"\"\r\n            }`}\r\n            disabled={currentPage === pagesAmount ? true : false}\r\n            onClick={nextPage}\r\n          >\r\n            следующая\r\n          </button>\r\n          <button\r\n            className={`pagination__button ${\r\n              currentPage === pagesAmount ? \"pagination__button_disabled\" : \"\"\r\n            }`}\r\n            disabled={currentPage === pagesAmount ? true : false}\r\n            onClick={lastPage}\r\n          >\r\n            на последнюю\r\n          </button>\r\n        </>\r\n      ) : (\r\n        // <div className=\"pagination__message\">\r\n        //   Подождите, идет загрузка карточек . . .\r\n        //   <div className=\"loader\" />\r\n        // </div>\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import { React, useState, useEffect } from \"react\";\n\nimport Cards from \"./Cards\";\nimport Sidebar from \"./Sidebar\";\nimport Pagination from \"./Pagination\";\n\nfunction Main(props) {\n  const {\n    cards,\n    types,\n    subtypes,\n    getSelectedOptions,\n    getPokemonInfo,\n    isGotItems,\n    onClose,\n    setCardInfo,\n    openFullImage,\n    getCards,\n    getTypes,\n    getSubtypes,\n  } = props;\n\n  const [currentPage, setCurrentPage] = useState(1);\n  // eslint-disable-next-line no-unused-vars\n  const [cardsPerPage, setCardsPerPage] = useState(4);\n  const [pagesAmount, setPagesAmount] = useState(1);\n  const [defaultCards, setDefaultCards] = useState(cards);\n\n  useEffect(() => {\n    getCards();\n    getTypes();\n    getSubtypes();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  \n  // ФУНКЦИОНАЛЬНОСТЬ ДЛЯ ПАГИНАЦИИ:\n  // Начальный рендер первой страницы с карточкамми\n  useEffect(() => {\n    setDefaultCards(cards); // В этом месте пока что еще целый массив\n    changePage(1); // Здесь массив уже урезан до объема, отображаемого на странице\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cards]);\n\n  // Установка количества страниц\n  useEffect(() => {\n    setPagesAmount(Math.ceil(cards.length / cardsPerPage));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cards]);\n\n  // Зависимость выбора части массива от страницы\n  useEffect(() => {\n    changePage(currentPage);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage]);\n\n  // Оставляем только ту часть массива, которая нужна для отображения на странице\n  function changePage(numberPage) {\n    setDefaultCards(\n      cards.slice(\n        numberPage * cardsPerPage - cardsPerPage,\n        numberPage * cardsPerPage\n      )\n    );\n  }\n\n  // Переход на первую страницу при выборе фильтров\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [cards]);\n\n  // Переключиться на след.страницу\n  function nextPage() {\n    setCurrentPage((prev) => {\n      if (prev === pagesAmount) {\n        return prev;\n      } else {\n        return prev + 1;\n      }\n    });\n  }\n\n  // Переключиться на предыдущ.страницу\n  function prevPage() {\n    setCurrentPage((prev) => {\n      if (prev === 1) {\n        return prev;\n      } else {\n        return prev - 1;\n      }\n    });\n  }\n\n  // Переключиться на первую страницу\n  function firstPage() {\n    setCurrentPage(1);\n  }\n\n  // Переключиться на последнюю страницу\n  function lastPage() {\n    setCurrentPage(pagesAmount);\n  }\n\n  return (\n    <div className=\"main\">\n      <Sidebar\n        types={types}\n        subtypes={subtypes}\n        cards={cards}\n        getSelectedOptions={getSelectedOptions}\n        isGotItems={isGotItems}\n      />\n      <div className=\"main-side\">\n        <Cards\n          cards={defaultCards}\n          getPokemonInfo={getPokemonInfo}\n          isGotItems={isGotItems}\n          onClose={onClose}\n          setCardInfo={setCardInfo}\n          openFullImage={openFullImage}\n        />\n        <Pagination\n          currentPage={currentPage}\n          pagesAmount={pagesAmount}\n          isGotItems={isGotItems}\n          routePage={{ nextPage, prevPage, firstPage, lastPage }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\r\n\r\nfunction ErrorPopup({ onClose, isOpen }) {\r\n  return (\r\n    <div\r\n      className={`popup ${isOpen ? \"popup_opened\" : \"\"}`}\r\n      onClick={(e) => {\r\n        if (e.target.className === \"popup popup_opened\") {\r\n          onClose();\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"popup__container\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"popup__close-icon\"\r\n          onClick={onClose}\r\n        ></button>\r\n        <div className=\"popup__err-image\" />\r\n        <h3 className=\"popup__title\">\r\n          Данные введены неправильно\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorPopup;\r\n","import { React } from \"react\";\r\n\r\nfunction FullImagePopup({ card, onClose, isOpen }) {\r\n  return (\r\n    <>\r\n      {card.images ? (\r\n        <div\r\n          className={`popup ${isOpen ? \"popup_opened\" : \"\"}`}\r\n          onClick={(e) => {\r\n            if (e.target.className === \"popup popup_opened\") {\r\n              onClose();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"popup__container\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"popup__close-icon\"\r\n              onClick={onClose}\r\n            ></button>\r\n            <img\r\n              alt={card.name}\r\n              className=\"popup__image\"\r\n              src={card.images.large}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FullImagePopup;\r\n","import React from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction ConfirmationContent({ confirm }) {\r\n  console.log(\"Код проверки: 123456\")\r\n  return (\r\n    <div className=\"confirm\">\r\n      <p className=\"confirm__title\">\r\n        На Ваш номер телефона был выслан код проверки. Введите его в поле ниже.\r\n      </p>\r\n      <Formik\r\n        initialValues={{ code: \"\" }}\r\n        validationSchema={Yup.object().shape({\r\n          code: Yup.number()\r\n            .typeError(\"Код должен состоять только из цифр\")\r\n            .required(\"Введите код из SMS-сообщения\"),\r\n        })}\r\n        onSubmit={(values, actions) => {\r\n          actions.setSubmitting(true);\r\n          setTimeout(() => {\r\n            actions.setSubmitting(false);\r\n            confirm(values);\r\n          }, 1500);\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form className=\"form\">\r\n            <Field\r\n              type=\"text\"\r\n              name=\"code\"\r\n              placeholder=\"Код из SMS-сообщения\"\r\n              className=\"input\"\r\n              autoComplete=\"off\"\r\n            />\r\n            <ErrorMessage\r\n              name=\"code\"\r\n              render={(msg) => <div className=\"error\">{msg}</div>}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className={`${\r\n                isSubmitting ? \"entryBtn entryBtn_disabled\" : \"entryBtn\"\r\n              }`}\r\n            >\r\n              {isSubmitting ? \"Подтверждение\" : \"Подтвердить\"}\r\n              {isSubmitting ? <div className=\"loader\" /> : \"\"}\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConfirmationContent;\r\n","import { Redirect } from \"react-router-dom\";\r\nimport ConfirmationContent from \"./ConfirmationContent\";\r\n\r\nfunction Confirmation(props) {\r\n  return props.loggedIn ? (\r\n    <ConfirmationContent {...props} />\r\n  ) : (\r\n    <Redirect to=\"/sign-in\" />\r\n  );\r\n}\r\n\r\nexport default Confirmation;\r\n","import React from 'react';\r\n\r\nexport const PocemonFullInfoContext = React.createContext();","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { PocemonFullInfoContext } from \"../contexts/pocemonFullInfoContext.js\";\r\n\r\nfunction FullInfoCard() {\r\n  const pokemon = React.useContext(PocemonFullInfoContext);\r\n  \r\n  return (\r\n    <div className=\"full\">\r\n      <section className=\"full__left-side\">\r\n        <div className=\"full__image\" style={{ backgroundImage: `url(${pokemon.images.large})` }} />\r\n      </section>\r\n      <section className=\"full__right-side\">\r\n        <h1 className=\"full__title\">{pokemon.name}</h1>\r\n        <p className=\"full__subtitle\">Супертип: {pokemon.supertype}</p>\r\n        <p className=\"full__subtitle\">Тип: {pokemon.types}</p>\r\n        <p className=\"full__subtitle\">Подтип: {pokemon.subtypes}</p>\r\n        <span className=\"full__line\"></span>\r\n        <p className=\"full__subtitle\">Урон от атаки: {pokemon.attacks[0].damage ? pokemon.attacks[0].damage : \"урон не указан или отсутствует\"}</p>\r\n        <p className=\"full__subtitle\">Затраты на атаку: {pokemon.attacks[0].cost[0] ? pokemon.attacks[0].cost[0] : \"затраты не указаны или отсутствуют\"}</p>\r\n        <p className=\"full__subtitle\">Слабости: {pokemon.weaknesses ? pokemon.weaknesses[0].type : \"нет слабостей\"}</p>\r\n        <p className=\"full__subtitle\">Кол-во здоровья: {pokemon.hp}hp</p>\r\n        <p className=\"full__description\"><b>Описание:</b> {pokemon.flavorText}</p>\r\n        <Link to=\"/pokemon\" className=\"full__link\">Назад</Link>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FullInfoCard;\r\n","class Api {\r\n  constructor() {\r\n    this.baseUrl = 'https://api.pokemontcg.io/v2';\r\n  }\r\n\r\n  checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Произошла ошибка: ${res.status}`);\r\n  }\r\n\r\n  getCards() {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    }).then(this.checkResponse);\r\n  }\r\n\r\n  getTypes() {\r\n    return fetch(`${this.baseUrl}/types`, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    }).then(this.checkResponse);\r\n  }\r\n\r\n  getSubtypes() {\r\n    return fetch(`${this.baseUrl}/subtypes`, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    }).then(this.checkResponse);\r\n  }\r\n}\r\n\r\nconst api = new Api();\r\nexport default api;","import { React, useState, useEffect } from 'react';\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\n\n// Импорт компоонентов\nimport Header from './Header';\nimport Login from './Login';\nimport ProtectedRoute from './ProtectedRoute';\nimport Main from './Main';\nimport ErrorPopup from './ErrorPopup';\nimport FullImagePopup from './FullImagePopup';\nimport Confirmation from './Confirmation';\nimport FullInfoCard from './FullInfoCard';\n\n// Импорт utils\nimport api from '../utils/api.js';\n\n// Импорт контекста\nimport { PocemonFullInfoContext } from '../contexts/pocemonFullInfoContext.js';\n\nfunction App() {\n  const fakeUser = {\n    email: 'kode@kode.ru',\n    password: 'Enk0deng',\n  };\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [authData, setAuthData] = useState({});\n  const [cards, setCards] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [subtypes, setSubtypes] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [copyCards, setCopyCards] = useState([]);\n\n  // Для попапов\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [cardInfo, setCardInfo] = useState({});\n\n  // Стэйт для контекста\n  const [pokemonFullInfo, setPokemonFullInfo] = useState({});\n\n  // Стэйты лоадеров\n  const [isGotItems, setIsGotItems] = useState(false);\n\n  const history = useHistory();\n  const { search } = useLocation();\n\n  // Проверка токена\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (token) {\n      setIsConfirmed(true);\n      history.replace({ search: search });\n      history.push(`/pokemon${search}`);\n    } else {\n      setIsConfirmed(false);\n      history.push('/sign-in');\n    }\n  }, [history]);\n\n  // Рендер карточек с сервера\n  function getCards() {\n    setIsGotItems(true);\n    api\n      .getCards()\n      .then((res) => {\n        setCards(res.data);\n        setCopyCards(res.data);\n      })\n      .catch((err) => console.log(err))\n      .finally(() => {\n        setIsGotItems(false);\n      });\n  }\n\n  // Рендер типов\n  function getTypes() {\n    api\n      .getTypes()\n      .then((res) => {\n        setTypes(res.data);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  // Рендер подтипов\n  function getSubtypes() {\n    api\n      .getSubtypes()\n      .then((res) => {\n        setSubtypes(res.data);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  // Авторизация и запись токена в LocalStorage(имитация)\n  function checkMatch(data) {\n    if (JSON.stringify(data) === JSON.stringify(fakeUser)) {\n      setAuthData(data);\n      setLoggedIn(true);\n      history.push('/confirmation');\n    } else {\n      setIsInfoToolTipOpen(true);\n    }\n  }\n\n  // Подтверждение по коду из SMS(имитация)\n  function checkCode({ code }) {\n    const fakeCode = 123456;\n    // eslint-disable-next-line eqeqeq\n    if (code == fakeCode) {\n      setLoggedIn(false);\n      setIsConfirmed(true);\n      localStorage.setItem(\n        'jwt',\n        `${authData.email}${authData.password}some_secret_key`\n      );\n      history.push('/pokemon');\n    } else {\n      setIsInfoToolTipOpen(true);\n    }\n  }\n\n  // Выход из системы\n  function signOut() {\n    localStorage.removeItem('jwt');\n    history.push('/sign-in');\n    setIsConfirmed(false);\n    setLoggedIn(false);\n  }\n\n  // Закрытие любого из попапов\n  function closeAllPopups() {\n    setIsInfoToolTipOpen(false);\n    setIsImagePopupOpen(false);\n    setCardInfo({});\n  }\n\n  // Изменение значений контекста\n  function getPokemonInfo(card) {\n    setPokemonFullInfo(card);\n  }\n\n  // ФУНКЦИОНАЛЬНОСТЬ ДЛЯ ФИЛЬТРАЦИИ КАРТОЧЕК:\n  // Задание опций для фильтрации карточек\n  function getSelectedOptions(options) {\n    setSelectedOptions(options);\n  }\n\n  // Проверка по условиям фильтра\n  useEffect(() => {\n    setCards(() => {\n      return copyCards.filter((item) => {\n        if (!selectedOptions.type && !selectedOptions.subtype) {\n          return true;\n        } else if (\n          item.types.includes(selectedOptions.type) &&\n          !selectedOptions.subtype\n        ) {\n          return true;\n        } else if (\n          !selectedOptions.type &&\n          item.subtypes.includes(selectedOptions.subtype)\n        ) {\n          return true;\n        } else if (\n          item.types.includes(selectedOptions.type) &&\n          item.subtypes.includes(selectedOptions.subtype)\n        ) {\n          return true;\n        }\n        return false;\n      });\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedOptions, search]);\n\n  // Попап быстрого просмотра карточки\n  function openFullImagePopup() {\n    setIsImagePopupOpen(true);\n  }\n\n  function setInfoFullImagePopup(card) {\n    setCardInfo(card);\n  }\n\n  return (\n    <>\n      <div className=\"page\">\n        <PocemonFullInfoContext.Provider value={pokemonFullInfo}>\n          <Header\n            signOut={signOut}\n            loggedIn={loggedIn}\n            isConfirmed={isConfirmed}\n          />\n          <Switch>\n            <Route path=\"/sign-in\">\n              <Login checkMatch={checkMatch} />\n            </Route>\n\n            <Route path=\"/confirmation\">\n              <Confirmation loggedIn={loggedIn} confirm={checkCode} />\n            </Route>\n\n            <ProtectedRoute\n              path=\"/pokemon\"\n              exact\n              isConfirmed={isConfirmed}\n              component={Main}\n              cards={cards}\n              types={types}\n              subtypes={subtypes}\n              getSelectedOptions={getSelectedOptions}\n              getPokemonInfo={getPokemonInfo}\n              isGotItems={isGotItems}\n              setCardInfo={setInfoFullImagePopup}\n              openFullImage={openFullImagePopup}\n              getCards={getCards}\n              getTypes={getTypes}\n              getSubtypes={getSubtypes}\n            />\n\n            <ProtectedRoute\n              path=\"/pokemon/:name\"\n              isConfirmed={isConfirmed}\n              component={FullInfoCard}\n            />\n          </Switch>\n        </PocemonFullInfoContext.Provider>\n      </div>\n\n      <ErrorPopup isOpen={isInfoToolTipOpen} onClose={closeAllPopups} />\n      <FullImagePopup\n        card={cardInfo}\n        isOpen={isImagePopupOpen}\n        onClose={closeAllPopups}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./pages/index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}